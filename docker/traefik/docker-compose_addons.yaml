version: '3'

# Services configuration
services:

  ##########
  # WHOAMI #
  ##########

  # whoami:
  #   container_name: whoami
  #   image: jwilder/whoami:latest
  #   network_mode: "bridge"
  #   restart: unless-stopped
  #   labels:
  #     - "traefik.frontend.rule=Host:whoami.scriptshell.net"
  #     - "traefik.backend=whoami"
  #     - "traefik.frontend.entryPoints=http,https"
  #     - "traefik.port=8000"
  #   volumes:
  #     - "/etc/localtime:/etc/localtime:ro"
  #     - "/etc/timezone:/etc/timezone:ro"
  #     - "/var/run/docker.sock:/var/run/docker.sock"

  #########
  # MONIP #
  #########

  monip:
    container_name: monip
    image: joshdvir/ipd:latest
    network_mode: "bridge"
    restart: unless-stopped
    labels:
      - "traefik.frontend.rule=Host:monip.scriptshell.net"
      - "traefik.backend=monip"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.port=8080"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"

  ##############
  # ROCKETCHAT #
  ##############

  # https://rocket.chat/docs/installation/docker-containers/docker-compose/
  # https://raw.githubusercontent.com/RocketChat/Rocket.Chat/develop/docker-compose.yml
  
  rocketchat:
    container_name: rocketchat
    image: rocketchat/rocket.chat:latest
    restart: unless-stopped
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "$PWD/rocketchat/data/uploads:/app/uploads"
      - "$PWD/rocketchat/scripts:/app/scripts"
    environment:
      - "PORT=3000"
      - "ROOT_URL=http://rocketchat.scriptshell.net"
      - "MONGO_URL=mongodb://mongo:27017/rocketchat"
      - "MONGO_OPLOG_URL=mongodb://mongo:27017/local"
    depends_on:
      - mongo
      - mongo-init-replica
    # ports:
    #   - 3000:3000
    labels:
      - "traefik.backend=rocketchat"
      - "traefik.frontend.rule=Host:rocketchat.scriptshell.net"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.port=3000"

  mongo:
    container_name: mongo
    image: mongo:3.7.2
    restart: unless-stopped
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "$PWD/mongo/data/db:/data/db"
      - "$PWD/mongo/data/backups:/dump"
    command: mongod --smallfiles --oplogSize 128 --replSet rs0
    labels:
      - "traefik.enable=false"
      
  mongo-init-replica:
    container_name: mongo-replica
    image: mongo:3.7.2
    command: 'mongo mongo/rocketchat --eval "rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})"'
    depends_on:
      - mongo
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    
  # hubot:
  #   container_name: rocketchat-hubot
  #   image: rocketchat/hubot-rocketchat:latest
  #   restart: unless-stopped
  #   environment:
  #     - "ROCKETCHAT_URL=rocketchat:3000"
  #     - "ROCKETCHAT_ROOM=GENERAL"
  #     - "ROCKETCHAT_USER=rocket.bot"
  #     - "ROCKETCHAT_PASSWORD=rocket.bot_password"
  #     - "BOT_NAME=rocket.bot"
  # # you can add more scripts as you'd like here, they need to be installable by npm
  #     - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics
  #   depends_on:
  #     - rocketchat
  #   labels:
  #     - "traefik.enable=false"
  #     - "traefik.port=3001"
  #   volumes:
  #     - "/etc/localtime:/etc/localtime:ro"
  #     - "/etc/timezone:/etc/timezone:ro"
  #     - "$PWD/rocketchat/scripts:/home/hubot/scripts"
  # # this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier
  #   # ports:
  #   #   - 3001:8080

  ##########
  # GITLAB #
  ##########

  #################
  # ELASTIC STACK #
  #################

  # # https://elk-docker.readthedocs.io/
  # # https://hub.docker.com/r/sebp/elk/
  # # https://github.com/spujadas/elk-docker/

  # # https://blog.zenika.com/2016/02/15/consolider-les-logs-docker-dans-un-elk/
  # # https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-logstash-and-kibana-elk-stack-on-centos-7

  # # 1) Increase max_map_count (default: 65530)
  # #    sudo sysctl -w vm.max_map_count=262144
  # # 2) For logs directory, do
  # #    chmod -R 777 $PWD/elk/elasticsearch/logs/
  # # 3) For elkx image
  # #    https://github.com/spujadas/elkx-docker/issues/8

  # elkx:
  #   container_name: elkx
  #   image: sebp/elkx:622
  #   ports:
  #     - "5601:5601"
  #     - "9200:9200"
  #     - "5044:5044"
  #   labels:
  #     - "traefik.frontend.rule=Host:elk.scriptshell.net"
  #     - "traefik.backend=elkx"
  #     - "traefik.frontend.entryPoints=http,https"
  #     - "traefik.port=5601"
  #   environment:
  #     - "TZ=Europe/Paris"
  #     # - "MAX_MAP_COUNT=262144"
  #     # - "ELASTIC_BOOTSTRAP_PASSWORD=es_pass" # changeme"
  #     - "ELASTICSEARCH_USER=elastic"
  #     - "ELASTICSEARCH_PASSWORD=es_pass"
  #     - "KIBANA_USER=kibana"
  #     - "KIBANA_PASSWORD=kb_pass"
  #     - "LOGSTASH_USER=logstash_system"
  #     - "LOGSTASH_PASSWORD=ls_pass"
  #   volumes:
  #     - "/etc/localtime:/etc/localtime:ro"
  #     - "/etc/timezone:/etc/timezone:ro"
  #     - "/etc/pki/tls/:/etc/pki/tls/"
  #     - "$PWD/elkx/elasticsearch/etc/:/etc/elasticsearch/"
  #     - "$PWD/elkx/elasticsearch/data/:/var/lib/elasticsearch/"
  #     - "$PWD/elkx/elasticsearch/log/:/var/log/elasticsearch/"
  #     - "$PWD/elkx/elasticsearch/opt/config/:/opt/elasticsearch/config/"
  #     - "$PWD/elkx/kibana/log/:/var/log/kibana/"
  #     - "$PWD/elkx/kibana/opt/config/:/opt/kibana/config/"
  #     - "$PWD/elkx/logstash/etc/:/etc/logstash/"
  #     - "$PWD/elkx/logstash/log/:/var/log/logstash/"
  #     - "$PWD/elkx/logstash/opt/config/:/opt/logstash/config/"
  #     - "/var/run/docker.sock:/var/run/docker.sock"

  ##############
  # PROMETHEUS #
  ##############

  # https://www.brianchristner.io/how-to-monitor-traefik-reverse-proxy-with-prometheus/

